#proxy_cache_path  /etc/nginx/cache levels=1:2 keys_zone=nuxt-cache:25m max_size=1g inactive=60m use_temp_path=off;

map $sent_http_content_type $expires {
    "text/html"                 1h; # set this to your needs
    "text/html; charset=utf-8"  1h; # set this to your needs
    default                     365d; # set this to your needs
}

server {
    listen 443 ssl http2;
    server_name  struger.online;
    ssl_certificate server.crt;
    ssl_certificate_key server.key;
    ssl_dhparam dhparam.pem;
    ssl_prefer_server_ciphers On;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
    add_header Strict-Transport-Security max-age=15768000;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied    expired no-cache no-store private auth;
    gzip_types      text/plain application/xml text/css application/javascript;

    charset utf-8;

    root /root/myapp/.nuxt/dist;

    location ~* \.(?:ico|gif|jpe?g|png|woff2?|eot|otf|ttf|svg|js|css)$ {
        expires $expires;
        add_header Pragma public;
        add_header Cache-Control "public";

        try_files $uri $uri/ @proxy;
    }

    #location / {
     #  proxy_pass http://127.0.0.1:3000;
      # proxy_set_header Host $host;
       #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       #proxy_set_header X-Real-IP $remote_addr;
    #}

     location / {
            expires $expires;
            add_header Content-Security-Policy "default-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval' http://cdnjs.cloudflare.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN";

            try_files $uri $uri/index.html @proxy; # for generate.subFolders: true
            # try_files $uri $uri.html @proxy; # for generate.subFolders: false
        }

     location @proxy {
            expires $expires;
             add_header Content-Security-Policy "default-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval' http://cdnjs.cloudflare.com; script-src-elem 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Cache-Status $upstream_cache_status;

            proxy_redirect                      off;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_ignore_headers        Cache-Control;
            proxy_http_version          1.1;
            proxy_read_timeout          1m;
            proxy_connect_timeout       1m;
            proxy_pass                  http://127.0.0.1:3000; # set the address of the Node.js instance here
          #  proxy_cache                 nuxt-cache;
           # proxy_cache_bypass          $arg_nocache; # probably better to change this
            #proxy_cache_valid           200 302  60m; # set this to your needs
           # proxy_cache_valid           404      1m;  # set this to your needs
           # proxy_cache_lock            on;
           # proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
           # proxy_cache_key             $uri$is_args$args;
        }
}

